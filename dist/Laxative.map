{"version":3,"sources":["tools.js","Element.js","ParticleMap.js","Laxative.js"],"names":["bind","obj","methods","method","camelCaseToDash","str","replace","toLowerCase","toCamelCase","g","toUpperCase","slice","isElement","element","HTMLElement","elements","Element","tag","CreateElement","rect","getBoundingClientRect","sizeStore","_id","Symbol","push","el","document","createElement","child","appendChild","error","console","querySelector","text","createTextNode","html","innerHTML","dataProp","value","undefined","dataset","getAttribute","className","classList","add","remove","size","sizeObj","width","height","pos","x","y","styles","style","prop","cloneNode","selectParticles","selector","querySelectorAll","setAbsolutePosition","particle","scrollY","css","top","yPos","left","xPos","ParticleMap","_scrollY","_particle_map","_particles","setup","forEach","original","clone","particleObj","position","speed","Number","data","addClass","margin","scrollAmount","move","transform","laxative_count","defaultConfig","scrollTarget","window","defaultSpeed","configureLaxative","config","_config","Object","assign","lax_config","createCSS","appendTo","head","Laxative","addEventListener","onScroll","event"],"mappings":";;;;;;AAAA,IAAMA,OAAO,SAAPA,IAAO,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAC3B,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7BD,YAAIC,OAAJ,IAAeD,IAAIC,OAAJ,EAAaF,IAAb,CAAkBC,GAAlB,CAAf;AACA;AACH;;ACIL,ADR+B;AEA/B,AFA+B;AAAA,0JCA/B;AEAA;AHA+B;AEE/B,AFII,IEJEwD,kBAAkB,OFIDvD,EEJjBuD,KFIF,UEJoB,CAACC,QAAD,EAAc,yGFIN;AEH5B,AFG4B,WEHrBhC,KFGEvB,IEHOwD,EFGY,cEHrB,CAA0BD,QAA1B,CAAP;ACFJ,ADGC,CAFD;AFKQzD,gBAAIE,MAAJ,IAAcF,IAAIE,MAAJ,EAAYH,IAAZ,CAAiBC,GAAjB,CAAd;AGLR,ADIA,AFEK,IEFC2D,sBAAsB,SAAtBA,mBAAsB,CAACC,QAAD,EAAWC,OAAX,EAAuB;ADInD,ACHID,AFP2B,ICUzB9C,SCHOU,EDGI,ACHb,CAAYsC,CDGhB,ECHI,CAAgB;AACZf,AFRuB,eEQZa,SAASpC,EAAT,CAAYuB,KAAZ,EAAX,OADY;ADKpB,ACHQC,AFTuB,ICYzBjC,UAAU,ECHI6C,ODGd7C,ECHuBS,EAAT,CAAYwB,EDGhB,CAAChC,GAAD,ACHI,EDGK,ACHjB,OAFY;ADMhB,ACHI+C,AFVuB,WCapB,ECHMH,EDGF3C,OCHW+C,IAAT,EDGN,CAAkBhD,ACHI6C,GDGtB,CAAP,GCHI,OAHY;ADOnB,ACHOI,AFXuB,CCY/B,aCDkBL,SAASM,IAAnB;ACPR,ADGoB,AFPW,IGI3BmB,CDGA,gBCHiB,CAArB;AFYA,ACHC,AFb8B,CEM/B,GDUMnE,OAAO,SAAPA,IAAO,CAACN,OAAD,EAAa;AACtB,AEXJ,AHN+B,IGMzB0E,OFWK1E,QAAQO,CEXG,oBFWX,EAAP;AACH,AEXGoE,AHP2B,CCgB/B,GCDMpB,cCRYqB,MADI;AAElBC,ADQA,AFhB2B,kBGQb,ODQFhC,QAAZ,EAAsBI,OAAtB,EAA+B;ADInC,AEdsB,ADUa,AFhBJ,CGM/B,GFcMzC,YAAY,EAAlB;ADpB+B;AGW/B,ADMQ,AFjBuB,ICsBzBH,AEXAyE,SDMOtB,QAAL,GCNkB,ADMFP,SCNlB6B,EDM6B,CAA3B,cCNkB,CAACC,MAAD,EAAY;AFYlC,AEXA,ADMI,AFlBuB,QGYrBC,KDMGvB,KCNOwB,OAAOC,CDMnB,CDKQ9E,ECLa,CDKzB,CEXgB,ADMZ,CDKa,AEXa,EAAd,EAAkBsE,aAAlB,EAAiCK,MAAjC,CAAhB;AFWiB,AEVjB,ADMI,AFVP,CATD,OGaUI,KDMGzB,QCNU,EAAnB,ADMI,GAAkBd,gBAAgBC,QAAhB,CAAlB;AACA,aAAKc,KAAL;ADIA,AETJ,ADMC,AFVL,SGIS,AHJApE,ICaIkB,AETAiC,GFSL,CETJ,EFSehC,EETEsE,GHJrB,CAA0BxF,CCaA,EETtB,AHJJ,EGI8B,AHJC,KCaZ,CAAX;AACAU,AETAiF,AHJJ,WAAO3F,IAAIC,ECaEkB,EETE+B,EFSX,CAAc,ADbX,CGIH,AHJe,GCaf,CETmBsC,QAAQtC,IAAR,CAAnB,KHJG,EAAoC,KAApC,EAA2ChD,WAA3C,EAAP;AGKC,AHJF;ACcK,YAAI,sBAAUU,GAAV,CAAJ,EAAoB;AAChB,AETR,AHJJ,IAAMT,OGIKwF,MFSMvE,CDbG,CCaR,EETR,CFSkBR,GAAV,EDbNT,KEQM,MFRQ,CAACH,GAAD,EAAS;ACcpB,AETR,ADGW,AFPRA,CGLJ,QFgBQ,CDXEA,IAAIC,CCaC,MDbL,CAAY,WAAZ,EAAyB,UAACG,CAAD,EAAO;ACc9B,ADbJ,eAAOA,ECaEgB,ADbA,CAAF,CCaH,CDbQf,ECaEgB,SAASC,ADbhB,EAAP,WCac,CAAuBV,GAAvB,CAAV;AACH,AETT,ADEQ,AFNH,IGICgF,CHNI,CAAN,UGMc,CDEL1B,QCFP0B,EDEE,CAAgBxB,MCFN,CDEV,CAAwB,CCFR,SDESZ,QAAD,EAAc;ACD1C,ADEQ,QCFFE,YDEQtC,KAAK,sBAAQoC,QAAR,CAAX,wGCFR;AFUI,ACPI,AFNR,WAAOxD,ICaI,ADbA,CAAJ,EAAOE,CCaV,CCPUmE,SFNP,EEMkBjD,GAAGkD,AFNEtE,IAAIM,CEMT,EAAjB,EFNsB,CAAU,CAAV,CAA9B;ACcC,AEJD,ADHQ,AFNX,CAND,mBEYkBiE,MCGN,OAAR,CDH4B,CCGX3C,IAAjB,CAAsB8B,GAAtB,EAA2BmC,QAA3B,CAAoCxE,SAASyE,IAA7C;AACH,ADHe1E,CCNhB,yBDKgC;AAEhB0C,AFNhB,IAAMvD,YAAY,SAAZA,CEMgBa,GAAGoD,KFNP,CAAChE,EEMG,GAAcsC,CAFJ,CFJd,EAAa;AEOfc,AFNZ,IGSEmC,OHTKvF,eEMWY,GAAGoD,CFNK/D,OEMR,GAAcsC,CAHJ,AFH5B;AGUA,ADHY0B,AFNf,CAFD,qBGWgBpB,KDHOqB,GCGnB,CFEOnD,CEF4B,EDHTH,GAAGuD,CDKf,GCLY,CAAQ,gBAAR,CAAP,CAJS;ADUxB,AEH+B,ADFvBN,YCEUkB,IFGd,EEH2B,oBFGjBhE,KAAV,CAAJ,EAAsB,2CEHK,EAAI;AFI3B,ACXoB,QFC5B5B,OAAAA,EEDQ,IDWKyB,EAAL,CAAQI,WAAR,CAAoBD,KAApB;AACH,AEL8B,QHLnCxB,kBAAAA;AEMQqB,QFLRjB,WEKWyE,GFLXzE,KEKQ,CAAY,UAAZ;ADMJ,AENA,ADCIoD,QFLRhD,KGISU,GFMD,AENJ,IHJJV,aGI4B,EAAE0E,CDCFV,WAApB,ECDJ,ADCqC,MAAKP,QAAtC;ADMA,AENJ,ADCI,aCDCwB,OAAL,CFMSpE,CCLA6C,CDKL,AENWqB,CFMH9D,WAAR,ACLA,CDKoBD,ACLDJ,IAAnB,CCD6BoE,ADCLhB,CDKEnD,EAA1B,GENW,CAAf,IDCI;ADMH,AEND,ADCC,aDGD,AEJK8C,ADbL,CDmBE,OAAMzC,EENR,GFME,AENgB,EFMH,EENOsC,qBAAJ,CAAgBV,QAAhB,EAA0B,KAAKmC,OAAL,CAAaL,YAAb,CAA0B1B,OAApD,CAAlB;AFOI/B,AENJ,aAAKsC,QAAL,GFMYvC,AENI,CAAhB,IFMI,CAAcA,KAAd;AACH,ACLD;ACAAmE,ADCA;ADMA,AENA,ADCA,iBAAK3B,EDKE,IAAP,EENK,IAAL,CDCA,CCDW,ADCQG,CCDP,MDCZ,CAA2B,GCDhB,CAAX,MDC4BZ,QAAD,EAAc;ADM5C,AENA,ADCOA,yBAASpC,EAAT,CAAYsC,GAAZ,CAAgB;AACZmB,4BAAQ;AADI,iBAAhB;AAGH,aAJD,oBDQKr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","file":"Laxative.map","sourceRoot":"../src","sourcesContent":["const bind = (obj, methods) => {\n    if (typeof methods === 'string') {\n        obj[methods] = obj[methods].bind(obj);\n        return;\n    }\n\n    for (let method of methods) {\n        obj[method] = obj[method].bind(obj);\n    }\n};\n\nfunction camelCaseToDash (str) {\n    return str.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n  }\n\nconst toCamelCase = (str) => {\n    str = str.replace(/-([a-z])/g, (g) => { \n        return g[1].toUpperCase(); \n    })\n    \n    return str[0].toLowerCase() + str.slice(1);\n};\n\nconst isElement = (element) => {\n    return element instanceof HTMLElement;\n};\n\nexport {\n    bind,\n    camelCaseToDash,\n    toCamelCase,\n    isElement,\n};","/*\n    Basic helper class that works on a single DOM Object at a time.\n    A new Element can be instantiated by passing a node type, or \n    a pre-existing DOM Object.\n\n    Example: Element('div') or Element(document.querySelector('body'))\n*/\n\nimport { isElement, toCamelCase, camelCaseToDash } from './tools';\n\nconst elements = [];\n\nconst Element = (tag) => {\n    return new CreateElement(tag);\n};\n\nconst rect = (element) => {\n    return element.getBoundingClientRect();\n};\n\nconst sizeStore = {};\n\nclass CreateElement {\n    constructor(tag) {\n        this._id = Symbol('Element');\n        elements.push(this);\n\n        if (isElement(tag)) {\n            this.el = tag;\n        } else {\n            this.el = document.createElement(tag);\n        }\n        \n        return this;\n    }\n\n    append(child) {\n        if (isElement(child)) {\n            this.el.appendChild(child);\n        }\n\n        try {\n            this.el.appendChild(child.el);\n        } catch(error) {\n            console.error(error);\n        }\n        \n        return this;\n    }\n\n    appendTo(element) {\n        if (!isElement(element)) {\n            element = document.querySelector(element);\n        }\n\n        element.appendChild(this.el);\n\n        return this;\n    }\n\n    text(text) {\n        this.el.appendChild(document.createTextNode(text));\n        return this;\n    }\n\n    html(html) {\n        this.el.innerHTML = html;\n        return this;\n    }\n\n    data(dataProp, value = undefined) {\n        if (typeof value !== 'undefined') {\n            this.el.dataset[toCamelCase(dataProp)] = value;\n        }\n\n        if (this.el.dataset) {\n            return this.el.dataset[toCamelCase(dataProp)];\n        } else {\n            return this.el.getAttribute(`data-${ camelCaseToDash(dataProp) }`);\n        }\n    }\n\n    addClass(className) {\n        this.el.classList.add(className);\n        return this;\n    }\n\n    removeClass(className) {\n        this.el.classList.remove(className);\n        return this;\n    }\n\n    size() {\n        if (sizeStore[this._id]) {\n            return sizeStore[this._id];\n        }\n\n        const size = rect(this.el);\n        const sizeObj = { width: size.width, height: size.height };\n\n        sizeStore[this._id] = sizeObj;\n\n        return sizeObj;\n    }\n\n    width() {\n        return this.size().width;\n    }\n\n    height() {\n        return this.size().height;\n    }\n\n    position() {\n        const pos = rect(this.el);\n        return { x: pos.x, y: pos.y };\n    }\n\n    css(styles, value) {\n        if (typeof styles === 'string') {\n            this.el.style[styles] = value;\n            return this;\n        }\n\n        for (let prop in styles) {\n            this.el.style[prop] = styles[prop];\n        }\n        \n        return this;\n    }\n\n    clone() {\n        return this.el.cloneNode(true);\n    }\n}\n\nexport {\n    Element,\n};","import { Element } from './Element';\n\nconst selectParticles = (selector) => {\n    return document.querySelectorAll(selector);\n}\n\nconst setAbsolutePosition = (particle, scrollY) => {\n    particle.el.css({\n        width: `${ particle.el.width() }px`,\n        height: `${ particle.el.height() }px`,\n        top: `${ particle.yPos + scrollY }px`,\n        left: `${ particle.xPos }px`,\n    });\n};\n\nclass ParticleMap {\n    constructor(selector, scrollY) {\n        this._scrollY = scrollY || 0;\n        this._particle_map = [];\n        this._particles = selectParticles(selector);\n        this.setup();\n    }\n\n    setup() {\n        this._particles.forEach((particle) => {\n            const el = Element(particle);\n            const original = el.clone();\n            const particleObj = {\n                el,\n                xPos: el.position().x,\n                yPos: el.position().y,\n                speed: Number(el.data('laxative-speed')),\n                original,\n            };\n\n            el.addClass('laxative');\n            setAbsolutePosition(particleObj, this._scrollY);\n            this._particle_map.push(particleObj)\n        });\n\n        // We do this last to ensure that elements with margin\n        // get spaced correctly.\n        this._particle_map.forEach((particle) => {\n            particle.el.css({\n                margin: 0,\n            })\n        });\n    }\n\n    decompose() {\n        // Remove particle data and reset to original\n    }\n\n    move(scrollAmount = 0) {\n        this._particle_map.forEach((particle) => {\n            const move = -(scrollAmount * particle.speed);\n            particle.el.css({\n                transform: `translateY(${move}px)`,\n            });\n        });\n    }\n}\n\nexport default ParticleMap;","import ParticleMap from './ParticleMap';\nimport { bind } from './tools';\nimport { Element } from './Element';\n\nlet laxative_count = 0;\n\nconst defaultConfig = {\n    scrollTarget: window,\n    defaultSpeed: 1,\n};\n\nconst configureLaxative = (config) => {\n    const _config = Object.assign({}, defaultConfig, config);\n    const lax_config = {}\n\n    for (let prop in _config) {\n        lax_config[prop] = _config[prop];\n    }\n\n    return lax_config;\n};\n\nconst createCSS = () => {\n    const css = `\n        .laxative {\n            position: fixed;\n            transition: transform 2s cubic-bezier(0.11, 0.87, 0.13, 0.97);\n        }\n    `;\n\n    Element('style').text(css).appendTo(document.head);\n};\n\nclass Laxative {\n    constructor(selector, config = {}) {\n        this._id = `laxative_${ ++laxative_count }`;\n        this._config = configureLaxative(config);\n        this._particles = new ParticleMap(selector, this._config.scrollTarget.scrollY);\n        this._scrollY = 0;\n\n        createCSS();\n        bind(this, ['onScroll']);\n    }\n\n    start() {\n        this._config.scrollTarget.addEventListener(`scroll`, this.onScroll);\n    }\n\n    dump() {\n        \n    }\n\n    onScroll(event) {\n        this._scrollY = this._config.scrollTarget.scrollY;\n        this._particles.move(this._scrollY);\n    }\n}\n\nexport default Laxative;"]}